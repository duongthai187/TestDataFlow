[tool.poetry]
name = "testdataflow"
version = "0.1.0"
description = "Ecommerce microservices foundation"
authors = ["DataFlow Team <team@example.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = { extras = ["standard"], version = "^0.30.0" }
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"
prometheus-fastapi-instrumentator = "^7.0.0"
prometheus-client = "^0.20.0"
python-dotenv = "^1.0.1"
rich = "^13.7.1"
SQLAlchemy = "^2.0.34"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
aiosqlite = "^0.20.0"
redis = { version = "^5.1.1", extras = ["hiredis"] }
aiokafka = "^0.10.0"
opentelemetry-api = "^1.26"
opentelemetry-sdk = "^1.26"
opentelemetry-exporter-otlp = "^1.26"
opentelemetry-instrumentation-fastapi = "^0.47b0"
opentelemetry-instrumentation-httpx = "^0.47b0"
httpx = "^0.27.0"
minio = "^7.2.7"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
pytest = "^8.3.2"
pytest-asyncio = "^0.23.8"
ruff = "^0.5.5"
mypy = "^1.11.1"
fakeredis = "^2.23.3"
pytest-mock = "^3.14.0"
coverage = "^7.6.1"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["services"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
src = ["services"]

[tool.mypy]
python_version = "3.11"
strict = true
pretty = true
