name: Notification Synthetic Probe

on:
  schedule:
    - cron: "15 2 * * *"
  workflow_dispatch:

jobs:
  probe:
    runs-on: ubuntu-latest
    env:
      SERVICE_DATABASE_URL: sqlite+aiosqlite:///./notification_service.db
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install "poetry==1.8.3"

      - name: Install dependencies
        run: poetry install --no-root

      - name: Bootstrap notification schema
        run: |
          poetry run python - <<'PYTHON'
          import asyncio
          import os
          from services.common import create_engine, dispose_engines
          from services.notification_service.app.models import Base

          database_url = os.environ.get("SERVICE_DATABASE_URL", "sqlite+aiosqlite:///./notification_service.db")
          engine = create_engine(database_url)

          async def main() -> None:
              async with engine.begin() as conn:
                  await conn.run_sync(Base.metadata.create_all)

          asyncio.run(main())
          asyncio.run(dispose_engines())
          PYTHON

      - name: Start notification service
        run: |
          nohup poetry run uvicorn services.notification_service.app.main:app --host 127.0.0.1 --port 8000 > uvicorn.log 2>&1 &
          echo $! > uvicorn.pid

      - name: Wait for readiness
        run: |
          for i in {1..30}; do
            if curl -sf http://127.0.0.1:8000/health > /dev/null; then
              exit 0
            fi
            sleep 2
          done
          echo "Notification service did not become ready in time" >&2
          exit 1

      - name: Run notification synthetic probe
        run: poetry run python scripts/synthetic/notification_probe.py --base-url http://127.0.0.1:8000

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: notification-service-logs
          path: |
            uvicorn.log
            uvicorn.pid
          if-no-files-found: ignore

      - name: Stop notification service
        if: always()
        run: |
          if [ -f uvicorn.pid ]; then
            kill $(cat uvicorn.pid) || true
            rm uvicorn.pid
          fi
